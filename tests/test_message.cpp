/*
********************************************************************************
**____________________________________________________________________________**
**_____/\/\/\/\/\___/\/\____________/\/\/\/\/\/\_/\/\__/\/\__/\/\_____________**
**____/\/\____/\/\_______/\/\__/\/\____/\/\___________/\/\__/\/\__/\/\/\/\/\__**
**___/\/\/\/\/\___/\/\____/\/\/\______/\/\_____/\/\__/\/\__/\/\______/\/\_____**
**__/\/\_________/\/\____/\/\/\______/\/\_____/\/\__/\/\__/\/\____/\/\________**
**_/\/\_________/\/\__/\/\__/\/\____/\/\_____/\/\__/\/\__/\/\__/\/\/\/\/\_____**
**____________________________________________________________________________**
**                                                                            **
**----- Author --------------{ PixTillz }-------------------------------------**
**----- File ----------------{ test_message.cpp }-----------------------------**
**----- Created -------------{ 2021-07-02 12:57:22 }--------------------------**
**----- Updated -------------{ 2021-08-20 15:23:01 }--------------------------**
********************************************************************************
*/

#include "../incs/Message.hpp"
#include "../incs/Debug.hpp"

int main (void) {
	Message test("Test string for message");
	Message test2("Test string for message");
	Message test3("Test string for message");

	// std::cout << test.getContent().substr(0, 1) << std::endl;
	DEBUG_DISPCB(COUT, std::string(45, '='), PURPLE, '-');
	DEBUG_DISP(COUT, test.getContent());
	DEBUG_DISPCB(COUT, std::string(45, '='), PURPLE, '-');
	while (!test.isWritten())
		DEBUG_DISPB(COUT, test.unload(1), '[');
	DEBUG_DISPCB(COUT, std::string(45, '='), PURPLE, '-');
	while (!test2.isWritten())
		DEBUG_DISPB(COUT, test2.unload(5), '[');
	DEBUG_DISPCB(COUT, std::string(45, '='), PURPLE, '-');
	while (!test3.isWritten())
		DEBUG_DISPB(COUT, test3.unload(64), '[');
	return (0);
}
